version: "3"

services:
  orders:
    container_name: orders_service
    image: app:latest
    build: ./orders
    env_file:
      - ./orders/.env
    ports:
      - "3001:3001"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
    links:
      - db
      - redis
    networks:
      - app-net
  products:
    container_name: products_service
    image: app:latest
    build: ./products
    env_file:
      - ./products/.env
    ports:
      - "3002:3002"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
      - orders
    links:
      - db
      - redis
    networks:
      - app-net
  gateway:
    container_name: api_gateway
    image: app:latest
    build: ./gateway
    env_file:
      - ./gateway/.env
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - db
      - redis
      - orders
      - products
    links:
      - db
      - redis
    networks:
      - app-net
  db:
    container_name: db
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: root-db
    volumes:
      - ./docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./data/db:/data/db
    networks:
      - app-net
  redis:
    image: 'bitnami/redis:latest'
    container_name: redis_container
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks:
      - app-net
    volumes:
      - ./data/redis:/data/redis
networks:
  app-net:
    driver: bridge